name: Main Build

on:
    pull_request:
        branches: [main]

env:
    REGISTRY: ghcr.io
    NAMESPACE: galasa-dev
    IMAGE_TAG: latest

jobs:
    build-integrationtests:
        name: Building the Integration Tests Repository
        runs-on: ubuntu-latest
        
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
            
            - name: Setup JDK 
              uses: actions/setup-java@v4
              with:
                java-version: '11'
                distribution: 'semeru'
                cache: maven
            
            - name: Print githash
              run: |
                  echo $GITHUB_SHA > ./inttests.githash
            
            # - name: Make secrets directory
            #   run : |
            #     mkdir /home/runner/work/secrets
          
            # - name: Copy settings.xml
            #   env:
            #     MAVEN_SETTINGS_XML: ${{ secrets.MAVEN_SETTINGS_XML }}
            #   run : |
            #     echo $MAVEN_SETTINGS_XML > /home/runner/work/secrets/settings.xml
          
            # - name: Copy GPG passphrase
            #   env:
            #     GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
            #   run : |
            #     echo $GPG_PASSPHRASE > /home/runner/work/secrets/passphrase.file
          
            # - name: Copy GPG key
            #   env:
            #     GPG_KEY_BASE64: ${{ secrets.GPG_KEY }}
            #   run : |
            #     echo $GPG_KEY_BASE64 |  base64 --decode > /home/runner/work/secrets/galasa.gpg
                    
            # # Set up Maven GPG directory
            # - name: Make GPG home directory
            #   run: |
            #         mkdir /home/runner/work/gpg
                
            # - name: Change directory permissions
            #   run: |
            #         chmod '700' /home/runner/work/gpg
          
            # - name: Import GPG
            #   run: |
            #         gpg --homedir /home/runner/work/gpg --pinentry-mode loopback --passphrase-file /home/runner/work/secrets/passphrase.file --import /home/runner/work/secrets/galasa.gpg
                
            # - name: Copy custom settings.xml
            #   run: |
            #         cp /home/runner/work/secrets/settings.xml /home/runner/work/gpg/settings.xml

            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v3
              with:
                gradle-version: 6.9.2
            
            - name: Build Integration Tests Gradle source code
              run: |
                gradle -b galasa-inttests-parent/build.gradle publish publishToMavenLocal \
                -PsourceMaven=https://development.galasa.dev/gh/maven-repo/obr \
                -PcentralMaven=https://repo.maven.apache.org/maven2/ \
                -PtargetMaven=${{github.workspace}}/repo
            
            - name: Building Integration Tests Maven source code
              run: |
                  mvn -f galasa-inttests-parent/dev.galasa.inttests.obr/pom.xml deploy \
                  -Dgalasa.source.repo=https://development.galasa.dev/gh/maven-repo/obr \
                  -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
                  -Dgalasa.release.repo=file:${{ github.workspace }}/repo \
                  -Dgalasa.skip.deploytestcatalog=true \
                  -Dgalasa.skip.bundletestcatalog=false \
                  --batch-mode --errors --fail-at-end \
                  --settings ${{github.workspace}}/settings.xml
            
            - name: Login to Github Container Registry
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
          
            - name: Extract metadata for Integration Tests image
              id: metadata
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/inttests-artefacts
          
            - name: Build Integration Tests image for development Maven registry
              id: build
              uses: docker/build-push-action@v5
              with:
                context: .
                file: dockerfiles/dockerfile.inttests
                push: true
                tags: ${{ steps.metadata.outputs.tags }}
                labels: ${{ steps.metadata.outputs.labels }}
                build-args: |
                 baseVersion=${{env.IMAGE_TAG}}
                 dockerRepository=harbor.galasa.dev
                 branch=main
            
            - name: Recycle application in ArgoCD
              env: 
                ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
              run: |
                docker run --env ARGOCD_AUTH_TOKEN=${{ env.ARGOCD_AUTH_TOKEN }} --rm -v ${{ github.workspace }}:/var/workspace ghcr.io/galasa-dev/argocdcli:main app actions run gh-maven-repos restart --kind Deployment --resource-name inttests-gh --server argocd.galasa.dev
         
            - name: Wait for app health in ArgoCD
              env: 
                ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
              run: |
                docker run --env ARGOCD_AUTH_TOKEN=${{ env.ARGOCD_AUTH_TOKEN }} --rm -v ${{ github.workspace }}:/var/workspace ghcr.io/galasa-dev/argocdcli:main app wait gh-maven-repos --resource apps:Deployment:inttests-gh --health --server argocd.galasa.dev
         